/pages
  /blog
    index.tsx
/components
  BlogCard.tsx
  SearchBar.tsx
/data
  blogs.json

data/blogs.json
[
  {
    "id": 1,
    "title": "Introduction to React",
    "category": "Frontend",
    "description": "A beginner's guide to React and component-based development."
  },
  {
    "id": 2,
    "title": "Next.js with Tailwind CSS",
    "category": "Fullstack",
    "description": "Build fast, responsive apps using modern stacks."
  },
  {
    "id": 3,
    "title": "Backend with Node.js",
    "category": "Backend",
    "description": "Learn to create powerful APIs with Node.js and Express."
  },
  {
    "id": 4,
    "title": "UI/UX Principles",
    "category": "Design",
    "description": "Improve user experience with solid design fundamentals."
  }
]

components/SearchBar.tsx
export default function SearchBar({
  value,
  onChange
}: {
  value: string;
  onChange: (value: string) => void;
}) {
  return (
    <div className="mb-6">
      <input
        type="text"
        value={value}
        onChange={(e) => onChange(e.target.value)}
        className="w-full p-3 rounded-xl border border-gray-300 shadow-sm focus:outline-none focus:ring-2 focus:ring-purple-500 bg-white text-gray-800 placeholder-gray-400 transition-all"
      />
    </div>
  );
}

components/BlogCard.tsx
type Blog = {
  id: number;
  title: string;
  category: string;
  description: string;
};

export default function BlogCard({ blog }: { blog: Blog }) {
  return (
    <div className="p-5 rounded-2xl shadow-md bg-white hover:shadow-xl hover:-translate-y-1 transition duration-300">
      <div className="text-xs uppercase font-semibold text-purple-600 mb-1">{blog.category}</div>
      <h2 className="text-xl font-bold text-gray-800 mb-2">{blog.title}</h2>
      <p className="text-sm text-gray-600">{blog.description}</p>
    </div>
  );
}

pages/blog/index.tsx
import { useState, useEffect } from 'react';
import BlogCard from '@/components/BlogCard';
import SearchBar from '@/components/SearchBar';
import blogsData from '@/data/blogs.json';

type Blog = {
  id: number;
  title: string;
  category: string;
  description: string;
};

export default function BlogPage() {
  const [searchQuery, setSearchQuery] = useState('');
  const [filteredBlogs, setFilteredBlogs] = useState<Blog[]>(blogsData);

  useEffect(() => {
    const query = searchQuery.toLowerCase();
    const filtered = blogsData.filter(
      (blog) =>
        blog.title.toLowerCase().includes(query) ||
        blog.category.toLowerCase().includes(query)
    );
    setFilteredBlogs(filtered);
  }, [searchQuery]);

  return (
    <div className="min-h-screen bg-gradient-to-br from-gray-50 to-purple-50 px-6 py-12">
      <div className="max-w-5xl mx-auto">
        <h1 className="text-4xl font-extrabold text-center text-purple-700 mb-8">
          Explore Blogs
        </h1>
        <SearchBar value={searchQuery} onChange={setSearchQuery} />
        <div className="grid sm:grid-cols-2 lg:grid-cols-3 gap-6">
          {filteredBlogs.length > 0 ? (
            filteredBlogs.map((blog) => (
              <BlogCard key={blog.id} blog={blog} />
            ))
          ) : (
            <p className="text-center col-span-full text-gray-500 text-sm">
              No matching blog found.
            </p>
          )}
        </div>
      </div>
    </div>
  );
}
